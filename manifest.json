{"cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /junit/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  # run test classes even if they are inner classes\n  # remove voluminous stack trace from output\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'` | grep -Ev 'org.junit.runner|org.junit.internal|sun.reflect|org.junit.Assert|java.lang.reflect|org.hamcrest'\nfi\n","output":"JUnit version 4.11-SNAPSHOT-20120416-1530\n....E.E.E\nTime: 0.009\nThere were 3 failures:\n1) the_result_of_unknown_amount_of_numbers_separated_by_commas_is_the_sum_of_them(StringCalculatorTest)\njava.lang.AssertionError: expected:<6> but was:<3>\n\tat StringCalculatorTest.the_result_of_unknown_amount_of_numbers_separated_by_commas_is_the_sum_of_them(StringCalculatorTest.java:29)\n2) the_result_of_one_number_is_itself(StringCalculatorTest)\njava.lang.AssertionError: expected:<1> but was:<3>\n\tat StringCalculatorTest.the_result_of_one_number_is_itself(StringCalculatorTest.java:15)\n3) should_use_newlines_between_numbers_in_addition_to_commas(StringCalculatorTest)\njava.lang.AssertionError: expected:<6> but was:<3>\n\tat StringCalculatorTest.should_use_newlines_between_numbers_in_addition_to_commas(StringCalculatorTest.java:36)\n\nFAILURES!!!\nTests run: 6,  Failures: 3\n","instructions":"\nThis is an instructor-led exercise.\nThere are no written instructions.\nYour instructor will explain the exercise.\n","StringCalculator.java":"import java.util.List;\n\npublic class StringCalculator {\n    static int add(String string) {\n        List<String> numbers = StringToIntParser.parse(string);\n        int sum = 0;\n        for (String number : numbers) {\n            if (number.equals(\"\")) {\n                continue;\n            }\n            sum += Integer.parseInt(number);\n        }\n        return sum;\n    }\n\n    static int add(String string, StringCalculatorParser parser) {\n        return 3;\n    }\n}\n\n","StringCalculatorTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class StringCalculatorTest {\n\n    @Test\n    public void the_result_of_empty_string_is_0() {\n        assertEquals(0, StringCalculator.add(\"\"));\n    }\n\n    @Test\n    public void the_result_of_one_number_is_itself() {\n        StringCalculatorParser parserWithDelimiterNewLineOrComma =\n            new ParserWithDelimiterNewLineOrComma();\n        assertEquals(1, StringCalculator.add(\"1\", parserWithDelimiterNewLineOrComma));\n    }\n\n    @Test\n    public void the_result_of_two_numbers_separated_by_a_comma_is_the_sum_of_them() {\n        StringCalculatorParser parserWithDelimiterNewLineOrComma =\n            new ParserWithDelimiterNewLineOrComma();\n        assertEquals(3, StringCalculator.add(\"1,2\", parserWithDelimiterNewLineOrComma));\n    }\n\n    @Test\n    public void the_result_of_unknown_amount_of_numbers_separated_by_commas_is_the_sum_of_them() {\n        StringCalculatorParser parserWithDelimiterNewLineOrComma =\n            new ParserWithDelimiterNewLineOrComma();\n        assertEquals(6, StringCalculator.add(\"1,2,3\", parserWithDelimiterNewLineOrComma));\n    }\n\n    @Test\n    public void should_use_newlines_between_numbers_in_addition_to_commas() {\n        StringCalculatorParser parserWithDelimiterNewLineOrComma =\n            new ParserWithDelimiterNewLineOrComma();\n        assertEquals(6, StringCalculator.add(\"1\\n2,3\", parserWithDelimiterNewLineOrComma));\n    }\n\n    @Test\n    public void should_use_different_delimiters() {\n        StringCalculatorParser parserWithCustomizedDelimiter = \n            new ParserWithCustomizedDelimiter();\n        assertEquals(3, StringCalculator.add(\"//;\\n1;2\", parserWithCustomizedDelimiter));\n    }\n}\n\n\n","StringToIntParser.java":"import java.util.List;\nimport java.util.Arrays;\n\npublic class StringToIntParser {\n    static List<String> parse(String string) {\n        return Arrays.asList(string.split(\"\\\\s*[,|\\\\n]\\\\s*\"));\n    }\n}","StringCalculatorParser.java":"public interface StringCalculatorParser {\n}","ParserWithCustomizedDelimiter.java":"public class ParserWithCustomizedDelimiter implements StringCalculatorParser {\n}","ParserWithDelimiterNewLineOrComma.java":"public class ParserWithDelimiterNewLineOrComma implements StringCalculatorParser {\n}"}
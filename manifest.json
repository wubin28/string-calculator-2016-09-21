{"cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /junit/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  # run test classes even if they are inner classes\n  # remove voluminous stack trace from output\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'` | grep -Ev 'org.junit.runner|org.junit.internal|sun.reflect|org.junit.Assert|java.lang.reflect|org.hamcrest'\nfi\n","output":"JUnit version 4.11-SNAPSHOT-20120416-1530\n.E..\nTime: 0.009\nThere was 1 failure:\n1) the_result_of_two_numbers_separated_by_a_comma_is_the_sum_of_them(StringCalculatorTest)\njava.lang.NumberFormatException: For input string: \"1,2\"\n\tat java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.lang.Integer.parseInt(Integer.java:580)\n\tat java.lang.Integer.parseInt(Integer.java:615)\n\tat StringCalculator.add(StringCalculator.java:4)\n\tat StringCalculatorTest.the_result_of_two_numbers_separated_by_a_comma_is_the_sum_of_them(StringCalculatorTest.java:18)\n\nFAILURES!!!\nTests run: 3,  Failures: 1\n","instructions":"\nThis is an instructor-led exercise.\nThere are no written instructions.\nYour instructor will explain the exercise.\n","StringCalculator.java":"public class StringCalculator {\n    static int add(String string) {\n        if (string.length() > 0) {\n            return Integer.parseInt(string);\n        }\n        return 0;\n    }\n}","StringCalculatorTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\n\npublic class StringCalculatorTest {\n\n    @Test\n    public void the_result_of_empty_string_is_0() {\n        assertEquals(0, StringCalculator.add(\"\"));\n    }\n\n    @Test\n    public void the_result_of_one_number_is_itself() {\n        assertEquals(1, StringCalculator.add(\"1\"));\n    }\n\n    @Test\n    public void the_result_of_two_numbers_separated_by_a_comma_is_the_sum_of_them() {\n        assertEquals(3, StringCalculator.add(\"1,2\"));\n    }\n}\n\n\n"}